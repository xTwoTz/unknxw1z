--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (4==v0) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==5) then function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v31)if (v2(v31,2)==79) then v20=v1(v4(v31,1,1));return "";else local v64=0;local v65;while true do if (v64==0) then v65=v3(v1(v31,16));if v20 then local v86=v6(v65,v20);v20=nil;return v86;else return v65;end break;end end end end);v18=1;end if (v18==4) then function v25()local v39=(926 -(469 + 457)) + 0;local v40;local v41;while true do if (v39==(2 -1)) then return (( -(1340 -(185 + (3075 -(1039 + 883)))) * v21(v41,840 -(339 + 469))) + (386 -(125 + 260)) + 0) * ((5 -3)^(v21(v41,109 -((1654 -(1451 + 131)) + 16),999 -((410 -171) + 729)) -(2409 -1386))) * ((((v21(v41,1,(19 -10) + 11) * (2^(406 -(152 + 190 + 32)))) + v40)/(((117 -(32 + 84)) + 1)^(122 -70))) + (569 -(398 + 170)));end if (v39==(0 -0)) then v40=v24();v41=v24();v39=1695 -(319 + 1375);end end end v26=nil;function v26(v32)local v42;if  not v32 then local v66=0 + 0;while true do if (v66==(0 -0)) then v32=v24();if (v32==(0 + 0)) then return "";end break;end end end v42=v4(v16,v19,(v19 + v32) -(1 + 0));v19=v19 + v32;local v43={};for v62=1 -0, #v42 do v43[v62]=v3(v2(v4(v42,v62,v62)));end return v7(v43);end v18=5;end if (v18==2) then function v22()local v44=v2(v16,v19,v19);v19=v19 + 1;return v44;end v23=nil;function v23()local v45=0 -0;local v46;local v47;while true do if ((1 -0)==v45) then return (v47 * (528 -272)) + v46;end if (v45==(0 -0)) then v46,v47=v2(v16,v19,v19 + 1 + 1);v19=v19 + 2;v45=1;end end end v18=3;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==7) then function v30(v33,v34,v35)local v48=v33[1];local v49=v33[2];local v50=v33[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (v67==0) then v68=1;v69= -1;v67=1;end if (v67==3) then A,B=v28(v11(v72));if  not A[1] then local v87=v33[4][v68] or "?";error("Script error at ["   .. v87   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (v67==2) then v72=nil;function v72()local v88=v48;local v89=Const;local v90=v49;local v91=v50;local v92=v28;local v93={};local v94={};local v95={};for v99=0,v71 do if (((68 + 1290)<=(4526 -(377 + 11))) and (v99>=v91)) then v93[v99-v91]=v70[v99 + (1288 -(642 + 645))];else v95[v99]=v70[v99 + 1 + 0];end end local v96=(v71-v91) + 1 + 0;local v97;local v98;while true do local v100=0 + 0;local v101;local v102;while true do if (((462 -213)<(3881 -1208)) and (v100==(1 -0))) then while true do if ((((2917 -(326 + 801)) -(257 + 1533))==v101) or ((3390 -(3091 -1184))<=(1669 -1018))) then v102=0 + 0;while true do if (((2092 -(352 + 1180))<(1454 + 3329)) and (v102==(1 + 0))) then if ((v98<=(14 + 5)) or (3374<(3681 -2584))) then if (((3973 -2044)>(244 -171)) and (v98<=(1 + (1385 -(942 + 435))))) then if ((4484>1640) and (v98<=4)) then if (((797 -(271 + 523))<=2491) and (v98<=(1 + 0))) then if ((v98>(27 -(6 + 21))) or ((1646 -(34 + (1050 -(375 + 513))))>1742)) then v34[v97[3]]=v95[v97[1828 -(1216 + 610)]];else local v138=0 + 0;local v139;local v140;while true do if ((75<(662 + 2786)) and (v138==(0 -0))) then v139=0;v140=nil;v138=1520 -(468 + 1051);end if ((((1543 -(151 + 331)) + 146)>=((1597 -1038) + 571)) and (v138==(710 -(207 + 502)))) then while true do if ((2877<(14023 -(6316 + 2868))) and (v139==(0 + 0 + 0))) then v140=v97[4 -2];v95[v140](v13(v95,v140 + (3 -2),v97[3]));break;end end break;end end end elseif (((7208 -3335)>(6638 -4288)) and (v98<=((372 + 864) -(258 + 976)))) then v68=v97[6 -3];elseif (((5501 -(1481 + 96))>=(1605 -(363 + 249 + 31))) and (v98==(1 + 2))) then local v180=0 -(0 + 0);local v181;local v182;while true do if ((v180==(2 -1)) or ((996 + 3634)<=(851 -(249 + 371)))) then while true do if (((3950 -(1261 + 731))==(1358 + 600)) and (v181==(0 + 0))) then v182=v97[7 -5];v95[v182]=v95[v182](v95[v182 + (20 -(11 + 8))]);break;end end break;end if ((312==312) and (v180==(0 + 0))) then v181=0 -0;v182=nil;v180=159 -(114 + 44);end end else local v183=0 -(988 -(446 + 542));local v184;local v185;local v186;local v187;local v188;local v189;while true do if (((5148 -1708)>=(1034 + 754)) and (v183==0)) then v184=157 -((78 -(5 + 35)) + 119);v185=nil;v183=1 -0;end if (((3343 -(1774 + 48))==(2569 -1048)) and (v183==(2 -(1277 -(56 + 1221))))) then v188=nil;v189=nil;v183=11 -8;end if ((v183==(1 + 1 + 1)) or ((11507 -7724)<(12080 -(139 + 8299)))) then while true do if (((2304 -(192 + (1084 -(374 + 560))))>607) and ((1473 -(724 + 746))==v184)) then if (v189 or (((2482 + 2858) -(131 + 721))>=(11424 -6768))) then local v261=0 + (0 -0);local v262;while true do if ((v261==(52 -((14 -7) + 45))) or (((3821 -1935) + 2990)<(6787 -4725))) then v262=644 -(598 + 46);while true do if (((1694 + 6)<=(1754 + 645)) and (v262==(0 -0))) then v95[v187]=v189;v68=v97[(1386 -739) -(276 + 368)];break;end end break;end end else v68=v68 + 1;end break;end if ((1381<(1811 + 1045)) and (v184==(4 -3))) then v187=v185 + (1963 -(677 + 1284));v188={v95[v185](v95[v185 + 1],v95[v187])};v184=1 + 1;end if ((v184==((0 -0) -0)) or ((9783 -5504)<((9256 -(105 + 889)) -4577))) then v185=v97[7 -5];v186=v97[8 -4];v184=(866 + 441) -(139 + 1167);end if ((v184==(2 + 0)) or ((5247 -(414 + 36))<=(3414 -2503))) then local v252=1625 -(736 + 889);while true do if ((621<(5419 -(1004 + 439))) and (v252==(0 + 0))) then for v274=1 + 0,v186 do v95[v187 + v274]=v188[v274];end v189=v188[1];v252=1;end if (((3818 -(340 + 1283))>=(3059 -1994)) and (v252==1)) then v184=3;break;end end end end break;end if (((11434 -7152)>=(1915 -(774 + 136))) and (v183==1)) then v186=nil;v187=nil;v183=1397 -(946 + 449);end end end elseif ((v98<=(12 -6)) or (4203<(3063 -(125 + 649)))) then if ((v98>(221 -(171 + 45))) or ((1338 + 1092)>3942)) then v95[v97[2]]=v95[v97[1114 -(618 + 493)]] + v97[(3 -1) + 2];else local v142=0;local v143;local v144;local v145;while true do if (((3340 -(1077 + (1149 -(212 + 212))))<2462) and (v142==(1010 -(224 + 785)))) then local v222=(2266 -(39 + 1907)) -(311 + 9);while true do if ((v222==1) or ((2314 -(23 + 407))>(4358 -(1055 + 245)))) then v142=252 -(10 + 240);break;end if ((v222==(0 -(0 -0))) or ((3287 + 62)<=(1929 -1129))) then v145={};v144=v10({},{__index=function(v245,v246)local v253=0 -0;local v254;while true do if ((((2176 + 1747) -(725 + 530))==(3361 -(133 + 322 + 238))) and (0==v253)) then local v268=0;while true do if (((3258 -(155 + 53))<(8620 -4013)) and (((131 + 24) -(67 + 88))==v268)) then v254=v145[v246];return v254[1242 -(904 + 337)][v254[3 -1]];end end end end end,__newindex=function(v247,v248,v249)local v255=(0 -0) -0;local v256;local v257;while true do if (((1 + 0)==v255) or ((3339 -((512 -(97 + 32)) + 777))<((1517 + 1155) -((3162 -2071) + 681)))) then while true do if ((4429>=(434 + 47)) and (v256==(0 -0))) then v257=v145[v248];v257[1][v257[1 + 1]]=v249;break;end end break;end if ((((2112 -(447 + 621)) -(175 + 721))==(1160 -(334 + 678))) and ((0 + 0)==v255)) then v256=0 -0;v257=nil;v255=1 + 0;end end end});v222=3 -(8 -6);end end end if ((514<(13717 -10632)) and (v142==(2 + 0))) then for v225=751 -(115 + 635),v97[4] do local v226=0 + 0;local v227;local v228;while true do if ((v226==(1571 -(1131 + 440))) or ((1488 + (6806 -3654))<=((3832 -2597) + 1283))) then v227=1370 -((3863 -2905) + 412);v228=nil;v226=1 + 0;end if ((v226==((2 + 0) -1)) or ((12459 -8064)<2265)) then while true do if ((v227==(0 + 0)) or (((29366 -19453) -6633)>(4675 -(1309 + 80)))) then local v263=0 -(0 + 0);while true do if (((3343 + 1205)>=(54 + 1996)) and (v263==(1558 -((2328 -(1599 + 149)) + 977)))) then v227=1 -0;break;end if (((3628 -(913 + 1051))<=(5322 -3423)) and (v263==0)) then v68=v68 + (1905 -(707 + 1197));v228=v88[v68];v263=2 -1;end end end if (((1594 + 924)>=(3372 -(299 + 904))) and (v227==(1 -0))) then if ((v228[787 -(633 + 25 + 128)]==22) or ((1442 + 846)==2092)) then v145[v225-((80 + 432) -(199 + 312))]={v95,v228[9 -6]};else v145[v225-(1 + 0 + 0)]={v34,v228[769 -((116 -78) + 728)]};end v94[ #v94 + ((1899 -(760 + 1137)) -1)]=v145;break;end end break;end end end v95[v97[919 -(84 + 833)]]=v30(v143,v144,v35);break;end if (((0 + 0)==v142) or ((53 + 781 + 193)>=(2069 + 1681))) then v143=v90[v97[3 -0]];v144=nil;v142=1;end end end elseif (((15399 -10646)>=(3400 -(544 + 398))) and (v98<=((3089 -(701 + 572)) -(110 + 1699)))) then if (((14 + 41)<(1203 + (4686 -3627))) and (v97[2]==v95[v97[(4 + 7) -7]])) then v68=v68 + (1848 -(281 + 1566));else v68=v97[(5 + 3) -5];end elseif (((1707 + 2309)<4958) and (v98==(677 -(78 + 591)))) then local v190=898 -(354 + 544);local v191;local v192;local v193;while true do if (((5248 -(1537 + 69))>=(1286 -819)) and (v190==(1769 -(1534 + 234)))) then v193=0;for v236=v191,v97[(2431 -642) -((1202 -(50 + 372)) + 1005)] do local v237=(0 -0) -(0 -0);local v238;while true do if ((v237==0) or ((22107 -17247)<=(2674 -(52 + 169)))) then v238=0;while true do if ((v238==(0 -(0 + 0))) or ((2323 + 983 + 724)<(733 + 1201))) then v193=v193 + (3 -2);v95[v236]=v192[v193];break;end end break;end end end break;end if ((v190==0) or (((5655 -(583 + 510)) -2956)>(6647 -((2544 -(1324 + 159)) + 715)))) then local v233=0 + 0;while true do if (((7275 -3571)>2818) and (v233==(235 -(67 + 168)))) then v191=v97[5 -3];v192={v95[v191](v13(v95,v191 + 1 + 0,v69))};v233=1038 -(665 + 372);end if ((2601<=(7538 -4812)) and (v233==(2 -1))) then v190=1 + (203 -(171 + 32));break;end end end end elseif (((285 + 75)<((14766 -(552 + 189)) -9722)) and (v95[v97[2]]~=v97[1902 -(410 + 1488)])) then v68=v68 + (1 -0);else v68=v97[3];end elseif (((9971 -6024)>3874) and (v98<=14)) then if (((571 + 36)<(14032 -10611)) and (v98<=11)) then if ((v98>(6 + 4)) or ((1643 + 916)>(3605 + 961))) then for v178=v97[2],v97[1384 -((699 -357) + 1039)] do v95[v178]=nil;end else local v146=(0 -0) -0;local v147;local v148;while true do if (((1749 + 799)<=(1827 + 1454)) and (v146==(1688 -(446 + 1241)))) then while true do if (((0 + 0)==v147) or ((6448 -(69 + (3388 -1877)))<(3577 -(89 + 926)))) then v148=v97[(5 + 0) -3];v95[v148](v95[v148 + 1]);break;end end break;end if (((330 + 39)<3957) and (v146==(0 + 0))) then v147=0;v148=nil;v146=1;end end end elseif ((v98<=(10 + 2)) or ((1984 + 123)==(2566 -(944 + 153)))) then local v149=(0 -0) + 0;local v150;while true do if ((v149==(0 + 0)) or ((628 -122)<313)) then v150=v97[2 -(0 -0)];v95[v150]=v95[v150](v13(v95,v150 + ((1030 + 813) -(1127 + 715)),v69));break;end end elseif ((v98==(26 -(23 -10))) or ((1023 -(482 + 453))>=(1522 -1090))) then if (((707 + 472)<=(1913 + 1902)) and  not v95[v97[6 -4]]) then v68=v68 + 1;else v68=v97[212 -(41 + 168)];end else local v194=0 -0;local v195;local v196;while true do if ((v194==0) or ((4349 -(732 + 549))==(1353 -791))) then v195=1148 -(608 + 540);v196=nil;v194=(846 -(109 + 735)) -1;end if (((3321 + 285)<=4959) and (v194==(860 -(332 + 527)))) then while true do if ((v195==(0 + (118 -(88 + 30)))) or (2389<=(3095 -(152 + 1583)))) then v196=v97[2 + 0];v95[v196]=v95[v196](v13(v95,v196 + (841 -(19 + (2728 -(1117 + 790)))),v97[13 -10]));break;end end break;end end end elseif (((1051 + 1254)>=(731 + 637)) and (v98<=(28 -12))) then if (((4275 -2493)<(9549 -4988)) and (v98==15)) then local v151=1289 -(403 + 886);local v152;local v153;local v154;while true do if (((3854 -(115 + 173))<4010) and (v151==(1804 -(1346 + 457)))) then v154=nil;while true do if ((v152==(75 -(57 + 17))) or (3924>=(4383 -(60 + 269)))) then v95[v153 + ((1 + 0) -(235 -(229 + 6)))]=v154;v95[v153]=v154[v97[95 -(66 + 25)]];break;end if ((v152==0) or ((10067 -7726)<(5591 -(4853 -(583 + 611))))) then v153=v97[4 -2];v154=v95[v97[3]];v152=1 + 0;end end break;end if (((52 + 289)<=(3461 -(421 + 88))) and (v151==(0 + 0))) then v152=0 -0;v153=nil;v151=(764 + 457) -(422 + 798);end end elseif ((((6872 -2098) -(311 + 33 + (1826 -(890 + 224))))>(1183 -(155 + 421))) and (v95[v97[2]]<v95[v97[1385 -(354 + 1027)]])) then v68=v68 + 1;else v68=v97[2 + 1];end elseif ((v98<=17) or ((4679 -(1467 + 379))==(2707 -(540 + 225)))) then local v155=1225 -(730 + 495);local v156;local v157;while true do if (((3438 -1975)<(125 + 653 + 779)) and (v155==(810 -(330 + 398 + 11 + 70)))) then while true do if ((v156==(27 -(11 + 16))) or (2721<1197)) then v157=v97[2 + 0];v95[v157]=v95[v157]();break;end end break;end if (((3468 -(1456 + 365))<(18154 -14187)) and (v155==0)) then v156=(168 -(32 + 136)) + (779 -(578 + 201));v157=nil;v155=1;end end elseif (((7585 -2960)>4246) and (v98==(15 + 3))) then v95[v97[2 + 0]]=v97[(3914 -1942) -(870 + 1099)]~=(0 + (1229 -(561 + 668)));else v95[v97[1124 -(829 + 293)]]=v30(v90[v97[6 -3]],nil,v35);end elseif ((v98<=(19 + 10)) or ((4164 -(6 + (2492 -(1501 + 399))))==(18821 -14972))) then if ((((6706 -(622 + 763)) -3900)<(3858 -(142 + 737))) and (v98<=(532 -(314 + 139 + 55)))) then if ((v98<=(14 + 7)) or ((212 + 2511)>2959)) then if ((v98==20) or ((11937 -7144)<(1260 -551))) then if (((2426 -(26 + 135 + 600))==(1009 + 656)) and (v95[v97[(63 + 1292) -(434 + 919)]]~=v95[v97[668 -(606 + 58)]])) then v68=v68 + (1094 -(1010 + 83));else v68=v97[124 -(70 + 51)];end else v95[v97[(4 -2) + 0]][v97[5 -(7 -5)]]=v97[1523 -(426 + 1093)];end elseif ((v98<=(936 -(708 + 206))) or ((2100 -(644 + 1039))<=171)) then v95[v97[2]]=v95[v97[3 -0]];elseif ((v98==(11 + 12)) or ((4379 + 62)<(2626 -(195 + 54)))) then local v199=1617 -(610 + 1007);local v200;local v201;local v202;local v203;local v204;local v205;while true do if ((v199==(2 -1)) or (((1643 + 2238) -(682 + (19 -10)))>=(7723 -2861))) then v202=nil;v203=nil;v199=4 -2;end if (((1284 + 1122)>(2435 -1266)) and (2==v199)) then v204=nil;v205=nil;v199=(31 -20) -(7 + 1);end if (((2582 -(295 + 844))<=(2675 -(289 + (721 -379)))) and (v199==(14 -11))) then while true do if (((7800 -3914)==(2733 + 1153)) and ((0 -0)==v200)) then v201=0 + 0;v202=nil;v200=1;end if ((v200==(1 + 0)) or (((2107 -(87 + 81)) -(190 + 140))<=((2978 + 227) -((1959 -(199 + 158)) + 316)))) then v203=nil;v204=nil;v200=2 -0;end if (((771 + 1733)>=(1159 -(7 + 873))) and (v200==(7 -5))) then v205=nil;while true do if ((1995<=(1686 + 843)) and (v201==(1 + 1))) then for v279=v202,v69 do local v280=0 -0;local v281;while true do if ((v280==(0 + 0)) or ((1868 -(939 + 908))>((6596 -(1261 + 396)) -(444 + 1241)))) then v281=0;while true do if (((7067 -4367)==(5617 -(3960 -(260 + 783)))) and ((1341 -(1080 + 92 + 169))==v281)) then v205=v205 + (4 -3);v95[v279]=v203[v205];break;end end break;end end end break;end if ((v201==(354 -(261 + 93))) or ((3160 + 601)<(2830 -(740 + 375)))) then local v269=0;local v270;while true do if (((222 -131)<(1822 -(3017 -(1533 + 195)))) and (v269==(1622 -(26 + 1596)))) then v270=(590 + 57) -(298 + 321 + 28);while true do if (((10145 -5278)>=(2919 -1152)) and ((3 -2)==v270)) then v201=1;break;end if (((0 -0)==v270) or (2023==(4749 -3240))) then v202=v97[147 -(4 + 141)];v203,v204=v92(v95[v202](v95[v202 + ((2126 -(269 + 492)) -(673 + 691))]));v270=1 + 0;end end break;end end end if (((2177 -1636)<=(4638 -(32 + 130))) and (1==v201)) then local v271=0;local v272;while true do if (((825 -334)<(7687 -(4139 -(573 + 594)))) and (v271==(0 -0))) then v272=0;while true do if ((v272==((698 + 591) -(1138 + (245 -94)))) or ((1093 + 1493)>((2596 + 8869) -7491))) then v69=(v204 + v202) -1;v205=1321 -(390 + 931);v272=1 + 0;end if (((9296 -(6805 -(104 + 5)))<=(6284 -2603)) and (v272==(1923 -(774 + 1148)))) then v201=1003 -(325 + 676);break;end end break;end end end end break;end end break;end if ((((463 + 12) -(75 + 400))==v199) or ((5355 -(1003 + 41))<(2528 -1034))) then v200=0 + 0;v201=nil;v199=(4 -2) -1;end end elseif ((v95[v97[1 + 0 + 1 + 0]]==v97[13 -9]) or (78>=(5254 -(1229 + 23)))) then v68=v68 + ((1270 -906) -((1648 -(231 + 1112)) + 58));else v68=v97[(1651 -(1493 + 149)) -6];end elseif ((v98<=26) or ((668 -((820 -587) + 303))>(3200 -(54 + 422)))) then if (((9120 -4139)>(1261 + (3697 -(34 + 1825)))) and (v98==((1787 -(723 + 1053)) + 14))) then v35[v97[(183 -(7 + 164)) -9]]=v95[v97[2]];else local v161=0 + 0;local v162;local v163;local v164;local v165;while true do if ((v161==(0 + 0)) or ((735 + (4435 -(311 + 101)))<(4744 -(1314 + 209)))) then v162=v97[1 + 1];v163,v164=v92(v95[v162](v13(v95,v162 + (1 -0),v97[3])));v161=1 + 0;end if (((3958 -2205)>1144) and (v161==(1 + 0))) then v69=(v164 + v162) -1;v165=1710 -(399 + 577 + 734);v161=2;end if ((((8148 -5867) + 79)==(3404 -1044)) and (v161==(431 -(273 + 156)))) then for v229=v162,v69 do local v230=1230 -(747 + (1100 -617));local v231;local v232;while true do if (((34 + 2919)==2953) and (v230==0)) then v231=0 -0;v232=nil;v230=1 + (0 -0);end if ((v230==(1 + 0)) or ((1783 -(326 + 349))>(1090 + 3406))) then while true do if (((4110 -((2462 -1354) + 355))>(5305 -3470)) and (v231==(1837 -(914 + 923)))) then v232=0;while true do if ((v232==(0 -0)) or ((4266 -(567 + 190))<(1098 + 1244))) then v165=v165 + 1 + 0 + 0;v95[v229]=v163[v165];break;end end break;end end break;end end end break;end end end elseif ((v98<=(38 -(5 + 6))) or (3163<(1084 -423))) then local v166=0 + 0;local v167;local v168;local v169;local v170;while true do if ((((18807 -13276) -(211 + 956))<(6165 -(1268 + 341))) and (0==v166)) then v167=0 + 0 + 0;v168=nil;v166=(2 -1) + 0;end if ((v166==(2 -0)) or ((110 + 1514)==(1851 + 2306))) then while true do if (((239 -((923 -(15 + 778)) + 62))<=(4215 -2839)) and (v167==(0 -0))) then local v242=525 -(283 + 242);while true do if ((3456<(5849 -(667 + 1050))) and (v242==(925 -(169 + (2099 -(626 + 718)))))) then v167=952 -(251 + 121 + 579);break;end if ((778<=(693 + 2518)) and (v242==(1488 -(1292 + 196)))) then v168=(0 + 0) -0;v169=nil;v242=199 -(126 + (203 -131));end end end if ((((9226 -2934) -2821)==(6294 -2823)) and (v167==(321 -(181 + 139)))) then v170=nil;while true do if ((v168==(576 -(481 + 95))) or (1984<(2282 -(884 + 11)))) then local v259=0 + 0;local v260;while true do if (((1684 + (2435 -(248 + 956)))<(9193 -5925)) and (v259==(0 -0))) then v260=1831 -(348 + 1483);while true do if ((v260==(0 + 0)) or ((2619 + 965)==(75 + 4118))) then v169=v97[(2462 -1929) -(310 + 221)];v170={};v260=1 + 0;end if ((v260==(1 -(959 -(678 + 281)))) or (2366<=(44 + 296))) then v168=1 + 0;break;end end break;end end end if (((4423 -(125 + 55))==4243) and (v168==(1 + 0))) then for v265=1 -0, #v94 do local v266=638 -(82 + 556);local v267;while true do if ((483<=(4108 -3211)) and (v266==(0 -0))) then v267=v94[v265];for v286=0, #v267 do local v287=0 -0;local v288;local v289;local v290;local v291;while true do if (((2454 + 1677)>(2168 -(119 + 14))) and ((829 -(315 + 317 + 196))==v287)) then local v295=0 + 0;while true do if ((v295==0) or ((7170 -5394)<971)) then v290=nil;v291=nil;v295=(1436 -(310 + 1125)) + 0;end if (((103 + 127)==(846 -(33 + 583))) and (v295==1)) then v287=9 -7;break;end end end if ((v287==(0 -0)) or ((10931 -7996)==((965 + 651) -802))) then local v296=0 -0;while true do if (((635 + 2621)==3256) and (v296==(0 + 0))) then v288=0 + 0;v289=nil;v296=687 -(111 + 575);end if ((((82 + 10) -(8 + 11))<=1568) and (v296==(1 -0))) then v287=1 + 0;break;end end end if ((v287==2) or ((5814 -((3137 -2091) + 654))==(2245 -(804 + 763)))) then while true do if ((v288==(0 -0)) or ((4092 -(692 + 677))>(4581 -(68 + 1015)))) then local v298=590 -(23 + 567);local v299;while true do if (((13184 -9769)>(1553 -(671 + 706))) and (v298==(0 + 0))) then v299=161 -(113 + 48);while true do if (((2 -1)==v299) or ((4927 -(85 + 37))==(443 + 2839))) then v288=1260 -(356 + (1640 -737));break;end if ((v299==0) or ((733 + 762 + 203)>=3779)) then v289=v267[v286];v290=v289[452 -(376 + 75)];v299=1 + 0;end end break;end end end if ((v288==(1 + 0)) or (3901<(6237 -(6948 -2491)))) then v291=v289[3 -1];if ((((176 + 671) -(168 + 609))<=(3616 + 729)) and (v290==v95) and (v291>=v169)) then local v300=0;local v301;while true do if (((3407 + 617)>=(969 + 2622)) and (v300==0)) then v301=1036 -(484 + 552);while true do if ((v301==(1406 -(687 + 719))) or (((10784 -8258) -(415 + (1540 -1179)))>=(5425 -(326 + 445 + 773)))) then v170[v291]=v290[v291];v289[1509 -(79 + 1429)]=v170;break;end end break;end end end break;end end break;end end end break;end end end break;end end break;end end break;end if ((v166==(2 -1)) or (((6264 -(362 + 1399)) -2378)==(1843 -(446 + 4)))) then v169=nil;v170=nil;v166=5 -3;end end elseif ((v98==(1229 -((1433 -1120) + 17 + 871))) or ((1736 -(1453 + 195))==(5346 -(1453 + 252 + 113)))) then local v206=1914 -((2669 -(975 + 492)) + 712);local v207;local v208;while true do if ((v206==1) or ((4005 -2647)>=1705)) then while true do if ((v207==(0 -0)) or (1257>3314)) then v208=v97[2 + (988 -(961 + 27))];v95[v208](v13(v95,v208 + (1144 -(1059 + 84)),v69));break;end end break;end if ((v206==0) or (((2749 -(585 + 44)) -(95 + 92))>2848)) then v207=0 + 0 + 0;v208=nil;v206=1 + 0;end end else v95[v97[1 + 1]]=v34[v97[1670 -(35 + 1632)]];end elseif (((233 + 4014)>(6373 -4717)) and (v98<=(18 + 16))) then if ((v98<=(61 -30)) or ((6550 -((1336 -(236 + 808)) + 1312))==778)) then if ((v98==(1572 -(90 + 1452))) or (((5161 + 2823) -4850)<=(8546 -5662))) then v95[v97[1 + (2 -1)]]();else v95[v97[2 -0]]=v95[v97[5 -2]][v97[4]];end elseif (((12705 -8003)>=1752) and (v98<=(29 + 3))) then v95[v97[2 + 0]]={};elseif ((v98==(1015 -(909 + 73))) or (((46 + 604) -221)>=(5378 -2814))) then do return;end elseif (v95[v97[(125 + 552) -(554 + 121)]] or (734>=(3285 -(174 + 733 + 85)))) then v68=v68 + ((2786 -(512 + 1163)) -((2184 -(42 + 1308)) + 276));else v68=v97[1063 -(71 + 989)];end elseif ((v98<=(1833 -(27 + 1769))) or ((2852 + 835)>(6203 -(1001 + (1901 -(1322 + 43)))))) then if ((v98<=(1379 -(984 + 360))) or ((2036 + 865 + 860)<(2672 + 326))) then v95[v97[7 -5]][v97[3]]=v95[v97[14 -(22 -12)]];elseif ((v98==36) or (965>=((7825 -(1308 + 493)) -2397))) then local v210=(1600 -(804 + 754)) -(14 + 27 + 1);local v211;local v212;local v213;local v214;local v215;while true do if (((441 + 1735)<=2749) and (v210==(1 + 0))) then v213=nil;v214=nil;v210=1204 -((1482 -(1196 + 223)) + 1139);end if (((2415 + 1550)==(12375 -8410)) and (v210==(0 + 0))) then v211=0 + 0;v212=nil;v210=1;end if ((v210==(745 -(738 + 5))) or ((845 + 275)==(799 + 122))) then v215=nil;while true do if ((v211==(0 + 0)) or ((4004 -1098)<=(775 -424))) then v212=0 -0;v213=nil;v211=1;end if (((1973 -(454 + 1517))==v211) or ((220 + 2779)<(1594 -(16 + (540 -(357 + 80)))))) then while true do if ((v212==(1826 -(829 + 997))) or ((7567 -2986)==(84 -47))) then local v273=0 + 0;while true do if ((v273==1) or ((720 -(440 -173))>=(4016 -((1760 -890) + 455)))) then v212=1024 -(404 + 619);break;end if (((7106 -3517)==((9525 -(664 + 1001)) -4271)) and (v273==(0 -0))) then local v292=665 -(360 + 305);while true do if (((1310 -((291 -97) + 374))==(772 -((672 -(503 + 163)) + 24))) and (v292==(1 -0))) then v273=2 -1;break;end if (((4612 -3358)<2179) and (v292==(1600 -(133 + 1467)))) then v213=v97[1611 -(1387 + 222)];v214={v95[v213](v95[v213 + (1452 -(798 + (2260 -1607)))])};v292=3 -2;end end end end end if ((v212==1) or ((14233 -9610)==(747 -238))) then v215=0 + 0;for v282=v213,v97[4] do local v283=0;while true do if ((v283==(0 -0)) or ((846 + 1797)<(3572 -1461))) then v215=v215 + (3 -(2 + 0));v95[v282]=v214[v215];break;end end end break;end end break;end if ((v211==(4 -(1 + 2))) or ((1829 -1265)>=(6737 -3993))) then v214=nil;v215=nil;v211=2;end end break;end end elseif ((v95[v97[2]]==v95[v97[3 + 1]]) or ((9271 -5363)<=2951)) then v68=v68 + 1 + 0;else v68=v97[2 + 1];end elseif (((5203 -(848 + 165))>=3791) and (v98<=(70 -32))) then local v174=0 + (1156 -(380 + 776));local v175;local v176;local v177;while true do if (((2854 -(337 + 436 + 675))==(2394 -(905 + 83))) and (v174==(1472 -(1291 + 180)))) then v177=nil;while true do if ((759<975) and (v175==((189 + 632) -(387 + 434)))) then local v243=1204 -(183 + 1021);while true do if (((437 -287)<=(6701 -2692)) and (v243==(1 + 0))) then v175=1 + 0;break;end if ((v243==(1988 -(1298 + 690))) or ((1190 + 205)>=(2190 -(256 + (1283 -(858 + 303)))))) then v176=v97[3 + 0];v177=v95[v176];v243=3 -2;end end end if ((v175==(1 + 0)) or ((5252 -(60 + 1634))==(3331 -(68 + 390)))) then for v250=v176 + 1 + 0,v97[231 -(72 + 155)] do v177=v177   .. v95[v250];end v95[v97[2]]=v177;break;end end break;end if ((v174==(0 -0)) or ((5410 -3411)>4156)) then v175=0;v176=nil;v174=605 -(480 + 124);end end elseif ((((2937 -967) -926)<=(9006 -5041)) and (v98>(1 + 38))) then v95[v97[1198 -(842 + 189 + 165)]]=v35[v97[3]];else v95[v97[2 -0]]=v97[1144 -(617 + (2006 -(422 + 1060)))];end v68=v68 + 1 + 0;break;end if ((3030>(5840 -3338)) and (v102==(1399 -(738 + 661)))) then local v118=1364 -(329 + 1035);local v119;while true do if (((143 + 252)<=(762 + 1557)) and (v118==(0 + 0))) then v119=1316 -(385 + 931);while true do if (((762 + 166 + 822)<(2509 + 2319)) and (v119==(0 + 0))) then local v131=0 + 0;while true do if ((v131==(69 -(20 + 49))) or ((1791 -1365)>=((6889 -(132 + 348)) -2626))) then v97=v88[v68];v98=v97[1];v131=1 + 0;end if (((3003 + 895)<=(2054 + 1923)) and (v131==(1 + 0))) then v119=1 + 0;break;end end end if ((v119==(1 + 0)) or (156>=(6002 -2944))) then v102=1;break;end end break;end end end end break;end end break;end if ((v100==(0 + 0)) or ((1091 -766)>((1975 -(865 + 189)) -(5 + 84)))) then v101=0;v102=nil;v100=1734 -(255 + 1478);end end end end v67=3;end if (v67==1) then v70={...};v71=v12("#",...) -1;v67=2;end end end;end return v30(v29(),{},v17)();end if (v18==1) then v21=nil;function v21(v36,v37,v38)if v38 then local v73=0 + 0;local v74;while true do if ((0 -0)==v73) then v74=(v36/(((2442 -581) -(92 + 1767))^(v37-1)))%((695 -(560 + 133))^(((v38-((353 -(193 + 158)) -1)) -(v37-1)) + (3 -2)));return v74-(v74%(1109 -((985 -432) + 555)));end end else local v75=(2 -0)^(v37-(1923 -(589 + 1333)));return (((v36%(v75 + v75))>=v75) and 1) or (190 -(113 + 77));end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24()local v51,v52,v53,v54=v2(v16,v19,v19 + (3 -(0 + 0)));v19=v19 + (1772 -(1084 + 684));return (v54 * ((41349388 -(73 + 746)) -24571353)) + (v53 * (188705 -123169)) + (v52 * 256) + v51;end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v55=0 + 0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==1) then local v76=0 -0;while true do if (v76~=2) then else v55=2;break;end if (v76~=0) then else v60=v24();v61={};v76=1;end if (v76~=(1787 -(1576 + 210))) then else local v85=0;while true do if (v85==1) then v76=2;break;end if (v85~=(0 -0)) then else for v106=1,v60 do local v107=24 -(4 + 20);local v108;local v109;while true do if (v107==(682 -(438 + 243))) then if (v108==1) then v109=v22()~=0;elseif (v108==(1 + 1)) then v109=v25();elseif (v108==(7 -4)) then v109=v26();end v61[v106]=v109;break;end if ((0 -0)~=v107) then else local v116=0 + 0;local v117;while true do if (v116==(717 -(671 + 46))) then v117=0;while true do if (v117~=0) then else local v125=1044 -(149 + 895);while true do if (v125==(1 -0)) then v117=1 + 0;break;end if ((1308 -(783 + 525))==v125) then v108=v22();v109=nil;v125=1 -0;end end end if (v117==1) then v107=1 + 0;break;end end break;end end end end end v59[3]=v22();v85=2 -1;end end end end end if (v55~=0) then else v56={};v57={};v58={};v59={v56,v57,nil,v58};v55=665 -(513 + 151);end if (v55==2) then for v77=1,v24() do local v78=0;local v79;local v80;while true do if (v78~=(0 + 0)) then else v79=0 -0;v80=nil;v78=1;end if (v78~=(1 + 0)) then else while true do if (v79==0) then v80=v22();if (v21(v80,1 -0,2 -1)~=0) then else local v110=0;local v111;local v112;local v113;local v114;while true do if (v110==(1242 -(1082 + 159))) then v113=nil;v114=nil;v110=2 + 0;end if (v110~=(0 -0)) then else v111=0;v112=nil;v110=1;end if (2==v110) then while true do if (v111==1) then v114={v23(),v23(),nil,nil};if (v112==(84 -(20 + 64))) then local v126=0;local v127;local v128;while true do if (v126==(1348 -(698 + 650))) then local v132=870 -(51 + 819);while true do if (v132~=0) then else v127=0;v128=nil;v132=1;end if ((1382 -(944 + 437))==v132) then v126=3 -2;break;end end end if (v126==(2 -1)) then while true do if (v127~=(1354 -(1152 + 202))) then else v128=0 -0;while true do if (v128==0) then v114[3]=v23();v114[2 + 2]=v23();break;end end break;end end break;end end elseif (v112==(818 -(300 + 517))) then v114[3]=v24();elseif (v112==(7 -5)) then v114[173 -(148 + 22)]=v24() -((1 + 1)^16);elseif (v112~=3) then else local v135=0;local v136;while true do if (v135~=0) then else v136=0;while true do if (v136~=0) then else v114[1401 -(245 + 1153)]=v24() -((1312 -(633 + 677))^16);v114[11 -7]=v23();break;end end break;end end end v111=2;end if (v111~=2) then else local v120=0;local v121;while true do if (v120==(0 -0)) then v121=0;while true do if (v121~=(1 + 0)) then else v111=1865 -(1784 + 78);break;end if (v121~=0) then else local v134=0;while true do if (v134==(481 -(288 + 193))) then if (v21(v113,2 -1,1)==(1 -0)) then v114[2]=v61[v114[2]];end if (v21(v113,9 -7,2)~=1) then else v114[1065 -(457 + 605)]=v61[v114[3]];end v134=1;end if (v134==1) then v121=1;break;end end end end break;end end end if (v111==(0 -0)) then local v122=223 -(203 + 20);local v123;while true do if (v122==(0 -0)) then v123=1602 -(1331 + 271);while true do if (v123==(2 -1)) then v111=1;break;end if (v123~=0) then else v112=v21(v80,2,3 + 0);v113=v21(v80,4,6);v123=1 -0;end end break;end end end if (v111~=(5 -2)) then else if (v21(v113,2 + 1,3)==(1843 -(1452 + 390))) then v114[4 + 0]=v61[v114[9 -5]];end v56[v77]=v114;break;end end break;end end end break;end end break;end end end for v81=1,v24() do v57[v81-(1 + 0)]=v29();end for v83=1,v24() do v58[v83]=v24();end return v59;end end end v30=nil;v18=7;end end end vv9());break;end if (3==v0) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end end end
